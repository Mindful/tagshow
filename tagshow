#!/usr/bin/python3

import inspect

from tagshow import *




if __name__ == "__main__":
    if len(sys.argv) > 1:
        print("Found arguments, attempting to select input files")
        file_names = sys.argv[1:-1]
    else:
        print("No arguments found")
        file_names = []

    for name in file_names:
        if '.' in name:
            __get_image(name)
        else:
            get(name)


    functions = []
    globals_list = globals().copy();
    for key, value in globals_list.items():
        if hasattr(value, '__call__'):
            functions.append(key + "()")

    for key, value in globals_list.items():
        if inspect.isclass(value):
            functions.remove(key + "()") #Remove constructors

    functions.sort()



    #TODO: this should support making slideshows too, and selecting/reselecting by tag
    print()
    print("-"*24)
    print("Selected ", IMAGES)
    print("Use the tag(tagname, value) method to tag all selected images, or the clear() method to clear them of tags")
    print("When you are done, call save(), or if you wish to quit without saving call exit()")
    print("You can create a slideshow from the selected images using render(name)")
    print(functions)
    print("-"*24)
    print()


    #TODO: we should replace this with a limited terminal that only runs our commands (converts them into python)
    #and throws out everything else
    vars = globals()
    vars.update(locals())
    readline.set_completer(rlcompleter.Completer(vars).complete)
    readline.parse_and_bind("tab: complete")
    shell = code.InteractiveConsole(vars)
    shell.interact()